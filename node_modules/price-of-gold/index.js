var Request = require('request'),
    T = require('time-sugar');


var GoldPrice = {
    
    latest: function (callback) {
        this._get(T(2).days().ago(), new Date(), function (err, prices) {
            if (prices.length == 0) return callback && callback('No prices found');
            
            return callback && callback(err, prices[0]);
        });
    },
    
    
    at: function (date, callback) {
        this._get(T(1).day().before(date), T(1).day().from(date), function (err, prices) {
            prices.forEach(function (price) {
                if (price.date.getTime() == date.getTime()) {
                    return callback && callback(null, price);
                }
            });
            
            return callback && callback('Could not find a price');
        });
    },
    
    
    _get: function (startDate, endDate, callback) {
        if (!startDate) startDate = new Date();
        if (!endDate) endDate = new Date();
        
        startDate = startDate.getFullYear() + '-' + (startDate.getMonth() + 1) + '-' + startDate.getDate();
        endDate = endDate.getFullYear() + '-' + (endDate.getMonth() + 1) + '-' + endDate.getDate();
        
        Request('https://www.quandl.com/api/v3/datasets/BUNDESBANK/BBK01_WT5511.json?start_date=' + startDate + '&end_date=' + endDate, function (err, response, body) {
            if (err || response.statusCode != 200) return callback && callback(err);
            
            var data = JSON.parse(body).dataset.data;
            
            // Convert to an array of objects
            data = data.map(function (item) { return { date: new Date(item[0]), price: item[1] }; });
            
            return callback && callback(null, data);
        });
    }
    
}

module.exports = GoldPrice;
